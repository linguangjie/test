{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["columns","title","dataIndex","key","align","columnsDone","render","text","style","textDecoration","App","useState","mission","rouble","RMB","dollar","list","setList","total","setTotal","listDone","setlistDone","totalDone","setTotalDone","rate","setRate","selectedRowKeys","setselectedRowKeys","useEffect","axios","get","then","res","data","catch","error","console","log","calculateTotal","arr","fn","sum","item","Number","className","onFinish","values","price","currency","RUB","USD","卢布","value","人民币","美元","push","Item","label","name","rules","required","message","allowClear","Option","type","htmlType","onClick","length","listCopy","forEach","item1","i","splice","rowSelection","onChange","selectedRows","dataSource","pagination","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6177c3f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Form, Button, Input, Select, Table, Checkbox } from \"antd\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst columns = [\n  {\n    title: \"任务名\",\n    dataIndex: \"mission\",\n    key: \"mission\",\n    align: \"center\",\n  },\n  {\n    title: \"卢布\",\n    dataIndex: \"rouble\",\n    key: \"rouble\",\n    align: \"center\",\n  },\n  {\n    title: \"人民币\",\n    dataIndex: \"RMB\",\n    key: \"RMB\",\n    align: \"center\",\n  },\n  {\n    title: \"美元\",\n    dataIndex: \"dollar\",\n    key: \"dollar\",\n    align: \"center\",\n  },\n];\nconst columnsDone = [\n  {\n    title: \"任务名\",\n    dataIndex: \"mission\",\n    key: \"mission\",\n    align: \"center\",\n    render:(text)=>{\n      return <span style={{textDecoration:'line-through'}}>{text}</span>\n    }\n  },\n  {\n    title: \"卢布\",\n    dataIndex: \"rouble\",\n    key: \"rouble\",\n    align: \"center\",\n  },\n  {\n    title: \"人民币\",\n    dataIndex: \"RMB\",\n    key: \"RMB\",\n    align: \"center\",\n  },\n  {\n    title: \"美元\",\n    dataIndex: \"dollar\",\n    key: \"dollar\",\n    align: \"center\",\n  },\n];\n\nfunction App() {\n  const [list, setList] = useState([\n    {\n      key: \"测试\",\n      mission: \"测试\",\n      rouble: 1,\n      RMB: 1,\n      dollar: 1,\n    },\n  ]);\n  let [total, setTotal] = useState(1);\n  const [listDone, setlistDone] = useState([]);\n  let [totalDone, setTotalDone] = useState(0);\n  const [rate, setRate] = useState(null);\n  let [selectedRowKeys,setselectedRowKeys] = useState([])\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.globus.furniture/forex\")\n      .then((res) => {\n        setRate(res.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  const calculateTotal = (arr,fn) => {\n    let sum = 0\n    for (const item of arr) {\n      sum += Number(item.RMB);\n    }\n    fn(sum)\n  };\n  const handleRowChange = (selectedRowKeys, selectedRows) => {\n    setselectedRowKeys(selectedRowKeys)\n  };\n  const handleConfirm = () => {\n    if(selectedRowKeys.length===0)return\n    const arr = [];\n    const listCopy = [...list]\n    selectedRowKeys.forEach((item1) => {\n      for (let i = 0; i < listCopy.length; i++) {\n        const item2 = listCopy[i];\n        if(item1===item2.key){\n         arr.push(listCopy.splice(i,1)[0]) \n         i--\n        }\n      }\n    });\n    setList(listCopy)\n    setlistDone([...listDone,...arr]);\n    calculateTotal(listCopy,setTotal)\n    calculateTotal([...listDone,...arr],setTotalDone)\n  };\n  const handleFormFinish = (values) => {\n    const { mission, price, currency } = values;\n    const { RUB, USD } = rate;\n    const arr = [...list];\n    let rouble, RMB, dollar;\n    const config = {\n      卢布: function () {\n        rouble = price;\n        RMB = price / RUB.value;\n        dollar = RMB * USD.value;\n      },\n      人民币: function () {\n        RMB = price;\n        rouble = price * RUB.value;\n        dollar = price * USD.value;\n      },\n      美元: function () {\n        dollar = price;\n        RMB = price / USD.value;\n        rouble = RMB * RUB.value;\n      },\n    };\n    config[currency]();\n    arr.push({\n      key: mission,\n      mission,\n      rouble,\n      RMB,\n      dollar,\n    });\n    setList(arr);\n    calculateTotal(arr,setTotal);\n  };\n  return (\n    <div className=\"App\">\n      <Form onFinish={handleFormFinish}>\n        <Form.Item\n          label=\"任务\"\n          name=\"mission\"\n          rules={[{ required: true, message: \"请输入任务\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"价格\"\n          name=\"price\"\n          rules={[{ required: true, message: \"请输入价格\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"货币\"\n          name=\"currency\"\n          rules={[{ required: true, message: \"请选择货币\" }]}\n        >\n          <Select allowClear>\n            <Select.Option value=\"卢布\">卢布</Select.Option>\n            <Select.Option value=\"人民币\">人民币</Select.Option>\n            <Select.Option value=\"美元\">美元</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            添加\n          </Button>\n        </Form.Item>\n      </Form>\n      <div className=\"content\">\n        <div className=\"left\">\n          <div className=\"btn\">\n            <Button type=\"primary\" onClick={handleConfirm}>\n              完成\n            </Button>\n          </div>\n\n          <Table\n            rowSelection={{\n              type: \"checkbox\",\n              onChange: handleRowChange,\n            }}\n            dataSource={list}\n            columns={columns}\n            pagination={false}\n          ></Table>\n          <div>总共：{total}元</div>\n        </div>\n        <div className=\"right\">\n          <Table\n            dataSource={listDone}\n            columns={columnsDone}\n            pagination={false}\n          ></Table>\n          <div>总共：{totalDone}元</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}